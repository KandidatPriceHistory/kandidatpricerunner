@mixin breakpoint($point) {
    @if ($point == xxxl) {
        @media (min-width: $xxxl-breakpoint) { @content }
    }

    @else if ($point == xxl) {
        @media (min-width: $xxl-breakpoint) { @content }
    }

    @else if ($point == xl) {
        @media (min-width: $xl-breakpoint) { @content }
    }

    @else if ($point == lg) {
        @media (min-width: $lg-breakpoint) { @content }
    }

    @else if ($point == md) {
        @media (min-width: $md-breakpoint) { @content }
    }

    @else if ($point == sm) {
        @media (min-width: $sm-breakpoint) { @content }
    }

    @else if ($point == xs) {
        @media (min-width: $xs-breakpoint) { @content }
    }

    @else if ($point == xxs) {
        @media (min-width: $xxs-breakpoint) { @content }
    }

    @else if ($point == xxxs) {
        @media (min-width: $xxxs-breakpoint) { @content }
    }
}

@mixin media-query($device) {
    @media screen and (max-width: $device) {
        @content;
    }
}

@mixin only-ie() {
    @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
        @content;
    }
}

@mixin user-select($value) {
    -webkit-touch-callout: $value;
    -webkit-user-select: $value;
    -moz-user-select: $value;
    -ms-user-select: $value;
    user-select: $value;
}

@mixin media-query-min($device) {
    @media screen and (min-width: $device) {
        @content;
    }
}

@mixin media-query-height($device) {
    @media screen and (max-height: $device) {
        @content;
    }
}

%clearfix {
    *zoom: 1;
    &:before, &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

@mixin clearfix() {
    &::after {
        display: block;
        content: "";
        clear: both;
    }
}

@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin box-sizing($type: border-box) {
    box-sizing: $type;
    -moz-box-sizing: $type;
    -webkit-box-sizing: $type;
}

@mixin box-shadow($shadow...) {
    -moz-box-shadow: $shadow;
    -webkit-box-shadow: $shadow; // iOS <4.3 & Android <4.1
    box-shadow: $shadow;
}

@mixin vertical-align($position: relative) {
    position: $position;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
}

@mixin placeholder {
    &::-webkit-input-placeholder {@content}
    &:-moz-placeholder           {@content}
    &::-moz-placeholder          {@content}
    &:-ms-input-placeholder      {@content}
}

@mixin background-image-retina($file, $type, $width, $height) {
    background-image: url($static-images-url + $file + '.' + $type);
    @media only screen and (-webkit-min-device-pixel-ratio: 2),
    only screen and (-moz-min-device-pixel-ratio: 2),
    only screen and (-o-min-device-pixel-ratio: 2/1),
    only screen and (min-device-pixel-ratio: 2),
    only screen and (min-resolution: 192dpi),
    only screen and (min-resolution: 2dppx) {
        & {
            background-image: url($static-images-url + $file + '_2x.' + $type);
            -webkit-background-size: $width $height;
            -moz-background-size: $width $height;
            -o-background-size: $width $height;
            background-size: $width $height;
        }
    }
}

@mixin transition($properties) {
    -webkit-transition: $properties;
    -moz-transition: $properties;
    transition: $properties;
}

@mixin inline-block {
    display: inline-block;
    *display: inline;
    *zoom: 1;
}

@mixin appearance {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
}

@mixin font-size ($size) {
    font-size: ($size/14) + rem;
}

@mixin line-height ($size) {
    @if ($size == sm) {
        line-height: 18px;
    }
    @else if ($size == md) {
        line-height: 24px;
    }
    @else if ($size == xl) {
        line-height: 30px;
    }
}

@mixin font-weight ($weight) {
    @if ($weight == light) {
        font-weight: 300
    }
    @else if ($weight == normal) {
        font-weight: 400;
    }
    @else if ($weight == semibold) {
        font-weight: 500;
    }
    @else if ($weight == bold) {
        font-weight: 700;
    }
}

@mixin _dynamic-link ($color, $active, $hover) {
    color: $color;
    cursor: pointer;

    &:hover {
        color: $hover;
    }

    &:active {
        color: $active;
    }
}

@mixin link-default {
    @include _dynamic-link($pr-link, $pr-link-active, $pr-link-hover)
}
